name: Bump the version on a release branch
on:
  workflow_dispatch:
    inputs:
      rc:
        description: "Is it a release candidate?"
        type: boolean
        default: false
      merge-back:
        description: "Should we merge back the release branch to main?"
        type: boolean
        default: true

jobs:
  compute-version:
    name: Compute the next version
    runs-on: ubuntu-22.04

    permissions:
      contents: read

    outputs:
      version: ${{ steps.next.outputs.version }}

    steps:
      - name: Make sure this is a release branch
        run: |
          if [[ ! "${{ github.ref_name }}" =~ ^release/ ]; then
            echo "This workflow must be run on a release branch"
            exit 1
          fi

      - name: Checkout the code
        uses: actions/checkout@v4.2.2

      - name: Install Rust toolchain
        run: |
          rustup toolchain install stable
          rustup default stable

      - name: Extract the current version
        id: current
        run: echo "version=$(cargo metadata --format-version 1 | jq -r '.packages[] | select(.name == "mas-cli") | .version')" >> "$GITHUB_OUTPUT"

      - name: Compute the new minor RC
        id: next
        env:
          BUMP: ${{ github.event.inputs.rc && 'prerelease' || 'patch' }}
          VERSION: ${{ steps.current.outputs.version }}
        run: echo "version=$(npx --yes semver@7.5.4 -i "$BUMP"" --preid rc "$VERSION")" >> "$GITHUB_OUTPUT"

  tag:
    uses: ./.github/workflows/tag.yaml
    needs: compute-version
    with:
      version: ${{ needs.compute-version.outputs.version }}
      force: true
    secrets:
      BOT_GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

  merge-back:
    name: Open a pull request to merge the release branch back to main
    runs-on: ubuntu-22.04

    permissions:
      contents: write
      pull-requests: write

    needs: [tag, compute-version]
    if: github.event.inputs.merge-back
    steps:
      - name: Open a pull request to merge the release branch back to main
        run: |
          gh pr create \
            --title "Release branch ${{ needs.compute-version.outputs.version }}" \
            --body "This pull request was automatically created by the release workflow. It merges the release branch back to main." \
            --base main \
            --head "${{ github.ref_name }}" \
            --label "T-Task"
